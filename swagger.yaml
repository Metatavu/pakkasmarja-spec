openapi: 3.0.3
info:
  title: Pakkasmarja REST API
  description: REST API for Pakkasmarja
  version: 3.0.0
security:
  - bearer:
      []
paths:
  /userGroups:
    get:
      operationId: listUserGroups
      summary: Lists user groups
      description: Lists user groups
      tags:
        - UserGroups
      responses:
        "200":
          description: List of user groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserGroup"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /contacts:
    get:
      operationId: listContacts
      summary: Lists contacts
      description: Lists contacts
      tags:
        - Contacts
      parameters:
        - name: search
          in: query
          description: filter results by free text search
          schema:
            type: string
      responses:
        "200":
          description: List of contacts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Contact"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /contacts/{id}:
    get:
      operationId: findContact
      summary: Find contact
      description: Finds contact by id
      tags:
        - Contacts
      parameters:
        - name: id
          required: true
          in: path
          description: contact id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A contact
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateContact
      summary: Update contact
      description: Updates single contact
      tags:
        - Contacts
      parameters:
        - name: id
          required: true
          in: path
          description: contact id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contact"
        description: Payload
        required: true
      responses:
        "200":
          description: Updated contact
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /contacts/{id}/basic:
    get:
      operationId: findBasicContact
      summary: Find basic contact
      description: Finds a basic vesion of contact by id
      tags:
        - Contacts
      parameters:
        - name: id
          required: true
          in: path
          description: contact id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A basic contact
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicContact"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /contacts/{id}/credentials:
    put:
      operationId: updateContactCredentials
      summary: Update contact credentials
      description: Updates single contact credentials
      tags:
        - Contacts
      parameters:
        - name: id
          required: true
          in: path
          description: contact id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credentials"
        description: Payload
        required: true
      responses:
        "204":
          description: No content to indicate successful update
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /contracts:
    get:
      operationId: listContracts
      summary: Lists contracts
      description: Lists contracts
      tags:
        - Contracts
      parameters:
        - name: Accept
          in: header
          description: Expected response format. Accepted values application/json for JSON
            reponse (default) and
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
            for Excel response
          schema:
            type: string
        - name: listAll
          in: query
          description: Returns all contracts instead of just user's own contracts. User
            must have permission to do this.
          schema:
            type: boolean
        - name: itemGroupCategory
          in: query
          description: Filters results by item group category.
          schema:
            type: string
        - name: itemGroupId
          in: query
          description: Filters results by item group id.
          schema:
            type: string
        - name: year
          in: query
          description: Filters results by year.
          schema:
            type: integer
            format: int32
        - name: status
          in: query
          description: Filters results by status
          schema:
            type: string
        - name: firstResult
          in: query
          description: Offset of first result. Defaults to 0
          schema:
            type: integer
            format: int64
        - name: maxResults
          in: query
          description: Max results. Defaults to 5
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: List of contracts.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Contract"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createContract
      summary: Create contract
      description: Create new contract
      tags:
        - Contracts
      requestBody:
        $ref: "#/components/requestBodies/Contract"
      responses:
        "200":
          description: Created contract
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contract"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /contractPreviews:
    post:
      operationId: createContractPreviews
      summary: create contract previews via XLSX file
      description: Creates contract previews via XLSX file
      tags:
        - Contracts
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: List of contract preview data objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ContractPreviewData"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /contracts/{id}:
    get:
      operationId: findContract
      summary: Find contract
      description: Finds contract by id
      tags:
        - Contracts
      parameters:
        - name: id
          required: true
          in: path
          description: contract id
          schema:
            type: string
            format: uuid
        - name: Accept
          in: header
          description: Expected response format. Accepted values application/json for JSON
            reponse (default) and
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
            for Excel response
          schema:
            type: string
      responses:
        "200":
          description: A contract
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contract"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateContract
      summary: Update contract
      description: Updates single contract
      tags:
        - Contracts
      parameters:
        - name: id
          required: true
          in: path
          description: contract id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/Contract"
      responses:
        "200":
          description: Updated contract
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contract"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /contracts/{contractId}/prices:
    get:
      operationId: listContractPrices
      summary: List contract prices
      description: Lists contract prices
      tags:
        - Contracts
      parameters:
        - name: contractId
          required: true
          in: path
          description: contract id
          schema:
            type: string
            format: uuid
        - name: sortBy
          in: query
          description: sort by (YEAR)
          schema:
            type: string
        - name: sortDir
          in: query
          description: sort direction (ASC, DESC)
          schema:
            type: string
        - name: firstResult
          in: query
          description: Offset of first result. Defaults to 0
          schema:
            type: integer
            format: int64
        - name: maxResults
          in: query
          description: Max results. Defaults to 5
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: A list of contract prices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ItemGroupPrice"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /contracts/{contractId}/documentTemplates:
    get:
      operationId: listContractDocumentTemplates
      summary: List contract document templates
      description: Lists contract templates
      tags:
        - Contracts
      parameters:
        - name: contractId
          required: true
          in: path
          description: contract id
          schema:
            type: string
            format: uuid
        - name: type
          required: false
          in: query
          description: Filter results by document template type
          schema:
            type: string
      responses:
        "200":
          description: List of contract templates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ContractDocumentTemplate"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createContractDocumentTemplate
      summary: Create contract document template
      description: Create new contract document template
      tags:
        - Contracts
      parameters:
        - name: contractId
          required: true
          in: path
          description: contract id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/ContractDocumentTemplate"
      responses:
        "200":
          description: Created contract document template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContractDocumentTemplate"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /contracts/{contractId}/documentTemplates/{contractDocumentTemplateId}:
    get:
      operationId: findContractDocumentTemplate
      summary: Find contract document template
      description: Finds a contract templates
      tags:
        - Contracts
      parameters:
        - name: contractId
          required: true
          in: path
          description: contract id
          schema:
            type: string
            format: uuid
        - name: contractDocumentTemplateId
          required: true
          in: path
          description: contract id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found contract document template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContractDocumentTemplate"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateContractDocumentTemplate
      summary: Updates contract document template
      description: Updates a contract templates
      tags:
        - Contracts
      parameters:
        - name: contractId
          required: true
          in: path
          description: contract id
          schema:
            type: string
            format: uuid
        - name: contractDocumentTemplateId
          required: true
          in: path
          description: contract id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/ContractDocumentTemplate"
      responses:
        "200":
          description: Updated contract document template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContractDocumentTemplate"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /contracts/{id}/documents/{type}:
    get:
      operationId: getContractDocument
      summary: Returns contract document
      description: Returns contract document by type
      tags:
        - Contracts
      parameters:
        - name: id
          required: true
          in: path
          description: contract id
          schema:
            type: string
            format: uuid
        - name: type
          required: true
          in: path
          description: document type
          schema:
            type: string
        - name: format
          required: true
          in: query
          description: document format (HTML or PDF)
          schema:
            type: string
      responses:
        "200":
          description: Document data
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /contracts/{id}/documents/{type}/signRequests:
    post:
      operationId: createContractDocumentSignRequest
      summary: Requests contract document electronic signing
      description: Requests contract document electronic signing
      tags:
        - Contracts
      parameters:
        - name: id
          required: true
          in: path
          description: contract id
          schema:
            type: string
            format: uuid
        - name: type
          required: true
          in: path
          description: document type
          schema:
            type: string
        - name: ssn
          required: true
          in: query
          description: Social security number
          schema:
            type: string
        - name: authService
          required: true
          in: query
          description: Used auth service name
          schema:
            type: string
        - name: redirectUrl
          required: false
          in: query
          description: Redirect after succesfull signing
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContractDocumentSignRequest"
        description: Payload
        required: true
      responses:
        "200":
          description: Contract document sign request with redirect url filled
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContractDocumentSignRequest"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /contractQuantities:
    get:
      operationId: listContractQuantities
      summary: Lists contracts quantities
      description: Lists contracts quantities
      tags:
        - Contracts
      parameters:
        - name: itemGroupId
          required: true
          in: query
          description: Filters results by item group id.
          schema:
            type: string
        - name: contactId
          required: true
          in: query
          description: Filters results by contact id.
          schema:
            type: string
      responses:
        "200":
          description: List of contract quantities.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ContractQuantities"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /itemGroups:
    get:
      operationId: listItemGroups
      summary: Lists item groups
      description: Lists item groups
      tags:
        - ItemGroups
      parameters:
        - name: contractUserId
          in: query
          description: contract user id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of item groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ItemGroup"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createItemGroup
      summary: Creates item group
      description: Creates item group
      tags:
        - ItemGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemGroup"
        description: Payload
        required: true
      responses:
        "200":
          description: Item group created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemGroup"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /itemGroups/{id}:
    get:
      operationId: findItemGroup
      summary: Find item group
      description: Finds item group by id
      tags:
        - ItemGroups
      parameters:
        - name: id
          required: true
          in: path
          description: item group id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A item group
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemGroup"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /itemGroups/{itemGroupId}/prices:
    get:
      operationId: listItemGroupPrices
      summary: List item group prices
      description: Lists item group prices
      tags:
        - ItemGroups
      parameters:
        - name: itemGroupId
          required: true
          in: path
          description: item group id
          schema:
            type: string
            format: uuid
        - name: sortBy
          in: query
          description: sort by (YEAR)
          schema:
            type: string
        - name: sortDir
          in: query
          description: sort direction (ASC, DESC)
          schema:
            type: string
        - name: firstResult
          in: query
          description: Offset of first result. Defaults to 0
          schema:
            type: integer
            format: int64
        - name: maxResults
          in: query
          description: Max results. Defaults to 5
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: A list of item group prices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ItemGroupPrice"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createItemGroupPrice
      summary: Creates item group price
      description: Creates an item group price
      tags:
        - ItemGroups
      parameters:
        - name: itemGroupId
          required: true
          in: path
          description: item group id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/ItemGroupPrice"
      responses:
        "200":
          description: Created item group price
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemGroupPrice"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /itemGroups/{itemGroupId}/prices/{priceId}:
    get:
      operationId: findItemGroupPrice
      summary: Find item group price
      description: Finds a item group price
      tags:
        - ItemGroups
      parameters:
        - name: itemGroupId
          required: true
          in: path
          description: item group id
          schema:
            type: string
            format: uuid
        - name: priceId
          required: true
          in: path
          description: price id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A finds item group price
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemGroupPrice"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateItemGroupPrice
      summary: Update item group price
      description: Updates a item group price
      tags:
        - ItemGroups
      parameters:
        - name: itemGroupId
          required: true
          in: path
          description: item group id
          schema:
            type: string
            format: uuid
        - name: priceId
          required: true
          in: path
          description: price id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/ItemGroupPrice"
      responses:
        "200":
          description: Updated item group price
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemGroupPrice"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteItemGroupPrice
      summary: Delete item group price
      description: Deletes an item group price
      tags:
        - ItemGroups
      parameters:
        - name: itemGroupId
          required: true
          in: path
          description: item group id
          schema:
            type: string
            format: uuid
        - name: priceId
          required: true
          in: path
          description: price id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Successful deletion
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /itemGroups/{itemGroupId}/documentTemplates:
    get:
      operationId: listItemGroupDocumentTemplates
      summary: List item group document templates
      description: Lists item group templates
      tags:
        - ItemGroups
      parameters:
        - name: itemGroupId
          required: true
          in: path
          description: item group id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of item group templates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ItemGroupDocumentTemplate"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /itemGroups/{itemGroupId}/documentTemplates/{id}:
    get:
      operationId: findItemGroupDocumentTemplate
      summary: Find item group document template
      description: Finds item group template
      tags:
        - ItemGroups
      parameters:
        - name: itemGroupId
          required: true
          in: path
          description: item group id
          schema:
            type: string
            format: uuid
        - name: id
          required: true
          in: path
          description: template id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A item group template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemGroupDocumentTemplate"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateItemGroupDocumentTemplate
      summary: Updates item group document template
      description: Updated item group document template
      tags:
        - ItemGroups
      parameters:
        - name: itemGroupId
          required: true
          in: path
          description: item group id
          schema:
            type: string
            format: uuid
        - name: id
          required: true
          in: path
          description: template id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemGroupDocumentTemplate"
        description: Payload
        required: true
      responses:
        "200":
          description: An updated item group document template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemGroupDocumentTemplate"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /deliveryPlaces:
    get:
      operationId: listDeliveryPlaces
      summary: Lists delivery places
      description: Lists delivery places
      tags:
        - DeliveryPlaces
      responses:
        "200":
          description: List of delivery places
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeliveryPlace"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /deliveryPlaces/{id}:
    get:
      operationId: findDeliveryPlace
      summary: Find delivery place
      description: Finds delivery place by id
      tags:
        - DeliveryPlaces
      parameters:
        - name: id
          required: true
          in: path
          description: delivery place id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A delivery place
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryPlace"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /operations:
    post:
      operationId: createOperation
      summary: Creates new operation
      description: Creates new operation
      tags:
        - Operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Operation"
        description: Payload
        required: true
      responses:
        "200":
          description: Operation created successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /operationReports:
    get:
      operationId: listOperationReports
      summary: List operation reports
      description: Lists operation reports
      tags:
        - OperationReports
      parameters:
        - name: type
          in: query
          description: filter by type
          schema:
            $ref: "#/components/schemas/OperationType"
        - name: sortBy
          in: query
          description: sort by (CREATED)
          schema:
            type: string
        - name: sortDir
          in: query
          description: sort direction (ASC, DESC)
          schema:
            type: string
        - name: firstResult
          in: query
          description: Offset of first result. Defaults to 0
          schema:
            type: integer
            format: int64
        - name: maxResults
          in: query
          description: Max results. Defaults to 20
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: List of operation reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OperationReport"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /operationReports/{id}:
    get:
      operationId: findOperationReport
      summary: Find operation report
      description: Find operation report by id
      tags:
        - OperationReports
      parameters:
        - name: id
          required: true
          in: path
          description: operation report id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A operation report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationReport"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /operationReports/{id}/items:
    get:
      operationId: listOperationReportItems
      summary: List operation report items
      description: Lists operation report items
      tags:
        - OperationReports
      parameters:
        - name: id
          required: true
          in: path
          description: operation report id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A list of operation report items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OperationReportItem"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /signAuthenticationServices:
    get:
      operationId: listSignAuthenticationServices
      summary: List sign authentication services
      description: List available sign authentication services
      tags:
        - SignAuthenticationServices
      responses:
        "200":
          description: A list of sign authentication services
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SignAuthenticationService"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /chatGroups:
    get:
      operationId: listChatGroups
      summary: Returns list of chat groups
      description: Returns list of chat groups
      tags:
        - ChatGroups
      parameters:
        - name: groupType
          in: query
          description: Filter chat groups by group type
          schema:
            $ref: "#/components/schemas/ChatGroupType"
      responses:
        "200":
          description: A list of chat groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChatGroup"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createChatGroup
      summary: Creates new chat group
      description: Creates new chat group
      tags:
        - ChatGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatGroup"
        description: Payload
        required: true
      responses:
        "200":
          description: Created chat group
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatGroup"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /chatGroups/{chatGroupId}:
    get:
      operationId: findChatGroup
      summary: Returns a chat group
      description: Returns a chat group
      tags:
        - ChatGroups
      parameters:
        - name: chatGroupId
          required: true
          in: path
          description: Chat group id
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A finds a chat group
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatGroup"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateChatGroup
      summary: Update chat group
      description: Update chat group
      tags:
        - ChatGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatGroup"
        description: Payload
        required: true
      parameters:
        - name: chatGroupId
          required: true
          in: path
          description: Chat group id
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Updated chat group
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatGroup"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteChatGroup
      summary: Deletes a chat group
      description: Deletes a chat group
      tags:
        - ChatGroups
      parameters:
        - name: chatGroupId
          required: true
          in: path
          description: Chat group id
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No content to indicate successful delete
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /chatGroups/{chatGroupId}/groupPermissions:
    get:
      operationId: listChatGroupGroupPermissions
      summary: Returns list of chat group group permissions
      description: Returns list of chat group group permissions
      tags:
        - ChatGroups
      parameters:
        - name: chatGroupId
          in: path
          description: Chat group id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: A list of chat group group permissions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChatGroupGroupPermission"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createChatGroupGroupPermissions
      summary: Creates new chat group group permission
      description: Creates new chat group group permission
      tags:
        - ChatGroups
      parameters:
        - name: chatGroupId
          in: path
          description: Chat group id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatGroupGroupPermission"
        description: Payload
        required: true
      responses:
        "200":
          description: Created chat group group permission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatGroupGroupPermission"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /chatGroups/{chatGroupId}/groupPermissions/{permissionId}:
    get:
      operationId: findChatGroupGroupPermissions
      summary: Find chat group group permission
      description: Find chat group group permission
      tags:
        - ChatGroups
      parameters:
        - name: chatGroupId
          in: path
          description: Chat group id
          required: true
          schema:
            type: integer
            format: int64
        - name: permissionId
          in: path
          description: Permission id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Found chat group group permission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatGroupGroupPermission"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateChatGroupGroupPermissions
      summary: Update chat group group permission
      description: Updates chat group group permission
      tags:
        - ChatGroups
      parameters:
        - name: chatGroupId
          in: path
          description: Chat group id
          required: true
          schema:
            type: integer
            format: int64
        - name: permissionId
          in: path
          description: Permission id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatGroupGroupPermission"
        description: Payload
        required: true
      responses:
        "200":
          description: Updated chat group group permission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatGroupGroupPermission"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteChatGroupGroupPermission
      summary: Delete chat group group permission
      description: Deletes chat group group permission
      tags:
        - ChatGroups
      parameters:
        - name: chatGroupId
          in: path
          description: Chat group id
          required: true
          schema:
            type: integer
            format: int64
        - name: permissionId
          in: path
          description: Permission id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No content to indicate successful delete
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /chatThreads:
    get:
      operationId: listChatThreads
      summary: Returns list of chat threads
      description: Returns list of chat threads
      tags:
        - ChatThreads
      parameters:
        - name: groupId
          in: query
          description: Filter chat threads by group id
          schema:
            type: integer
            format: int64
        - name: groupType
          in: query
          description: Filter chat treads by group type
          schema:
            $ref: "#/components/schemas/ChatGroupType"
        - name: ownerId
          in: query
          description: Filter chat treads by owner id
          schema:
            type: string
            format: uuid
          required: false
      responses:
        "200":
          description: A list of chat threads
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChatThread"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createChatThread
      summary: Creates new chat thread
      description: Creates new chat thread
      tags:
        - ChatThreads
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatThread"
        description: Payload
        required: true
      responses:
        "200":
          description: A created chat thread
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatThread"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /chatThreads/{chatThreadId}:
    get:
      operationId: findChatThread
      summary: Returns chat thread
      description: Returns chat thread
      tags:
        - ChatThreads
      parameters:
        - name: chatThreadId
          required: true
          in: path
          description: Chat thread id
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Updated chat thread
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatThread"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateChatThread
      summary: Update chat thread
      description: Update chat thread
      tags:
        - ChatThreads
      parameters:
        - name: chatThreadId
          required: true
          in: path
          description: Chat thread id
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatThread"
        description: Payload
        required: true
      responses:
        "200":
          description: A of chat thread
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatThread"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteChatThread
      summary: Deletes chat thread
      description: Deletes chat thread
      tags:
        - ChatThreads
      parameters:
        - name: chatThreadId
          required: true
          in: path
          description: Chat thread id
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No content to indicate successful delete
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /chatThreads/{chatThreadId}/messages:
    get:
      operationId: listChatMessages
      summary: Returns list of chat messages
      description: Returns list of chat messages
      tags:
        - ChatMessages
      parameters:
        - name: chatThreadId
          in: path
          required: true
          description: Chat thread
          schema:
            type: integer
            format: int64
        - name: createdBefore
          in: query
          description: Messages created before given time
          schema:
            type: string
            format: date-time
        - name: createdAfter
          in: query
          description: Messages created after given time
          schema:
            type: string
            format: date-time
        - name: userId
          in: query
          description: Messages created by given user
          schema:
            type: string
        - name: firstResult
          in: query
          description: Offset of first result. Defaults to 0
          schema:
            type: integer
            format: int64
        - name: maxResults
          in: query
          description: Max results. Defaults to 5
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: A list of chat messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChatMessage"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createChatMessage
      summary: Creates new chat message
      description: Creates new chat message
      tags:
        - ChatMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatMessage"
        description: Payload
        required: true
      parameters:
        - name: chatThreadId
          in: path
          required: true
          description: Chat thread
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: A created chat message
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatMessage"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /chatThreads/{chatThreadId}/messages/{messageId}:
    get:
      operationId: findChatMessage
      summary: Returns chat message
      description: Returns chat thread
      tags:
        - ChatMessages
      parameters:
        - name: chatThreadId
          in: path
          description: Chat thread
          required: true
          schema:
            type: integer
            format: int64
        - name: messageId
          in: path
          description: Chat message id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Updated chat message
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatMessage"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateChatMessage
      summary: Update chat message
      description: Update chat message
      tags:
        - ChatMessages
      parameters:
        - name: chatThreadId
          in: path
          description: Chat thread
          required: true
          schema:
            type: integer
            format: int64
        - name: messageId
          in: path
          description: Chat message id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: A of chat message
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatMessage"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteChatMessage
      summary: Deletes chat message
      description: Deletes chat message
      tags:
        - ChatMessages
      parameters:
        - name: chatThreadId
          in: path
          description: Chat thread
          required: true
          schema:
            type: integer
            format: int64
        - name: messageId
          in: path
          description: Chat message id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No content to indicate successful delete
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /chatThreads/{chatThreadId}/messages/{messageId}/read:
    get:
      operationId: getMessageRead
      summary: Returns whether message has been read
      description: Returns whether message has been read
      tags:
        - ChatMessages
      parameters:
        - name: chatThreadId
          in: path
          description: Chat thread
          required: true
          schema:
            type: integer
            format: int64
        - name: messageId
          in: path
          description: Chat message id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Whether message has been read
          content:
            application/json:
              schema:
                type: boolean
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /chatThreads/{chatThreadId}/messages/{messageId}/read/amount:
    get:
      operationId: getMessageReadAmount
      summary: Returns amount of users who have read message as string
      description: Returns amount of users who have read message as string
      tags:
        - ChatMessages
      parameters:
        - name: chatThreadId
          in: path
          description: Chat thread
          required: true
          schema:
            type: integer
            format: int64
        - name: messageId
          in: path
          description: Chat message id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Amount of users who have read message as string
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /chatThreads/{chatThreadId}/groupPermissions:
    get:
      operationId: listChatThreadGroupPermissions
      summary: Returns list of chat thread group permissions
      description: Returns list of chat thread group permissions
      tags:
        - ChatThreads
      parameters:
        - name: chatThreadId
          in: path
          description: Chat thread id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: A list of chat thread group permissions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChatThreadGroupPermission"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createChatThreadGroupPermissions
      summary: Creates new chat thread group permission
      description: Creates new chat thread group permission
      tags:
        - ChatThreads
      parameters:
        - name: chatThreadId
          in: path
          description: Chat thread id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatThreadGroupPermission"
        description: Payload
        required: true
      responses:
        "200":
          description: Created chat thread group permission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatThreadGroupPermission"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /chatThreads/{chatThreadId}/groupPermissions/{permissionId}:
    get:
      operationId: findChatThreadGroupPermission
      summary: Find chat thread group permission
      description: Find chat thread group permission
      tags:
        - ChatThreads
      parameters:
        - name: chatThreadId
          in: path
          description: Chat thread id
          required: true
          schema:
            type: integer
            format: int64
        - name: permissionId
          in: path
          description: Permission id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Found chat thread group permission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatThreadGroupPermission"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateChatThreadGroupPermission
      summary: Update chat thread group permission
      description: Updates chat thread group permission
      tags:
        - ChatThreads
      parameters:
        - name: chatThreadId
          in: path
          description: Chat thread id
          required: true
          schema:
            type: integer
            format: int64
        - name: permissionId
          in: path
          description: Permission id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatThreadGroupPermission"
        description: Payload
        required: true
      responses:
        "200":
          description: Updated chat thread group permission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatThreadGroupPermission"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /chatThreads/{chatThreadId}/userPermissions:
    get:
      operationId: listChatThreadUserPermissions
      summary: Returns list of chat thread user permissions
      description: Returns list of chat thread user permissions
      tags:
        - ChatThreads
      parameters:
        - name: chatThreadId
          in: path
          description: Chat thread id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: A list of chat thread user permissions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChatThreadUserPermission"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createChatThreadUserPermission
      summary: Creates new chat thread user permission
      description: Creates new chat thread user permission
      tags:
        - ChatThreads
      parameters:
        - name: chatThreadId
          in: path
          description: Chat thread id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatThreadUserPermission"
        description: Payload
        required: true
      responses:
        "200":
          description: Created chat thread user permission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatThreadUserPermission"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /chatThreads/{chatThreadId}/userPermissions/{permissionId}:
    get:
      operationId: findChatThreadUserPermission
      summary: Find chat thread user permission
      description: Find chat thread user permission
      tags:
        - ChatThreads
      parameters:
        - name: chatThreadId
          in: path
          description: Chat thread id
          required: true
          schema:
            type: integer
            format: int64
        - name: permissionId
          in: path
          description: Permission id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Found chat thread user permission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatThreadUserPermission"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateChatThreadUserPermission
      summary: Update chat thread user permission
      description: Updates chat thread user permission
      tags:
        - ChatThreads
      parameters:
        - name: chatThreadId
          in: path
          description: Chat thread id
          required: true
          schema:
            type: integer
            format: int64
        - name: permissionId
          in: path
          description: Permission id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatThreadUserPermission"
        description: Payload
        required: true
      responses:
        "200":
          description: Updated chat thread user permission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatThreadUserPermission"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /chatThreads/{threadId}/reports/{type}:
    get:
      operationId: getChatThreadReport
      summary: Returns chat thread report
      description: Returns chat thread report
      tags:
        - ChatThreads
      parameters:
        - name: threadId
          required: true
          in: path
          description: chat thread id
          schema:
            type: integer
            format: int64
        - name: type
          required: true
          in: path
          description: report type. Accepted values summaryReport
          schema:
            type: string
        - name: Accept
          in: header
          description: Expected response format. Accepted values
            application/vnd.openxmlformats for Excel response
          schema:
            type: string
      responses:
        "200":
          description: Report data
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /newsArticles:
    post:
      operationId: createNewsArticle
      summary: Create news article
      description: Creates news article
      tags:
        - NewsArticles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewsArticle"
        description: Payload
        required: true
      responses:
        "200":
          description: Created news article
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NewsArticle"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    get:
      operationId: listNewsArticles
      summary: Lists news articles
      description: Lists news articles
      tags:
        - NewsArticles
      responses:
        "200":
          description: List of news articles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NewsArticle"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /newsArticles/{newsArticleId}:
    get:
      operationId: findNewsArticle
      summary: Find news article
      description: Finds news article by id
      tags:
        - NewsArticles
      parameters:
        - name: newsArticleId
          required: true
          in: path
          description: news article id id
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A created news article
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NewsArticle"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateNewsArticle
      summary: Update news article
      description: Updates news article
      tags:
        - NewsArticles
      parameters:
        - name: newsArticleId
          required: true
          in: path
          description: news article id id
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewsArticle"
        description: Payload
        required: true
      responses:
        "200":
          description: Updated news article
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NewsArticle"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteNewsArticle
      summary: Delete news article
      description: Deletes news article
      tags:
        - NewsArticles
      parameters:
        - name: newsArticleId
          required: true
          in: path
          description: news article id id
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No content to indicate successful delete
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /products:
    post:
      operationId: createProduct
      summary: Create product
      description: Creates product
      tags:
        - Products
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
        description: Payload
        required: true
      responses:
        "200":
          description: Created product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    get:
      operationId: listProducts
      summary: Lists products
      description: Lists products
      tags:
        - Products
      parameters:
        - name: itemGroupId
          in: query
          description: filter by item group id
          schema:
            type: string
            format: uuid
        - name: itemGroupCategory
          in: query
          description: filter by item group id
          schema:
            $ref: "#/components/schemas/ItemGroupCategory"
        - name: contractUserId
          in: query
          description: output only products what specified user has contract in
          schema:
            type: string
            format: uuid
        - name: firstResult
          in: query
          description: Offset of first result. Defaults to 0
          schema:
            type: integer
            format: int64
        - name: maxResults
          in: query
          description: Max results. Defaults to 5
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /products/{productId}:
    get:
      operationId: findProduct
      summary: Find product
      description: Finds product by id
      tags:
        - Products
      parameters:
        - name: productId
          required: true
          in: path
          description: product id id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A created product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateProduct
      summary: Update product
      description: Updates product
      tags:
        - Products
      parameters:
        - name: productId
          required: true
          in: path
          description: product id id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
        description: Payload
        required: true
      responses:
        "200":
          description: Updated product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteProduct
      summary: Delete product
      description: Deletes product
      tags:
        - Products
      parameters:
        - name: productId
          required: true
          in: path
          description: product id id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: No content to indicate successful delete
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /products/{productId}/prices:
    get:
      operationId: listProductPrices
      summary: List product prices
      description: Lists product prices
      tags:
        - ProductPrices
      parameters:
        - name: productId
          required: true
          in: path
          description: product id
          schema:
            type: string
            format: uuid
        - in: query
          name: sort
          required: false
          description: sort
          schema:
            type: string
            enum:
              - CREATED_AT_ASC
              - CREATED_AT_DESC
        - in: query
          name: atTime
          required: false
          description: sort
          schema:
            type: string
            format: date-time
        - name: firstResult
          in: query
          description: Offset of first result. Defaults to 0
          schema:
            type: integer
            format: int64
        - name: maxResults
          in: query
          description: Max results. Defaults to 5
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: List of product prices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductPrice"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createProductPrice
      summary: Create product price
      description: Creates product price
      tags:
        - ProductPrices
      parameters:
        - name: productId
          required: true
          in: path
          description: product id id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductPrice"
        description: Payload
        required: true
      responses:
        "200":
          description: Created product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductPrice"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /products/{productId}/prices/{productPriceId}:
    get:
      operationId: findProductPrice
      summary: Find product price
      description: Finds product price
      tags:
        - ProductPrices
      parameters:
        - name: productId
          required: true
          in: path
          description: product id
          schema:
            type: string
            format: uuid
        - name: productPriceId
          required: true
          in: path
          description: product price id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of product prices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductPrice"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateProductPrice
      summary: Update product price
      description: Updates product price
      tags:
        - ProductPrices
      parameters:
        - name: productId
          required: true
          in: path
          description: product id id
          schema:
            type: string
            format: uuid
        - name: productPriceId
          required: true
          in: path
          description: product price id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductPrice"
        description: Payload
        required: true
      responses:
        "200":
          description: Created product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductPrice"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteProductPrice
      summary: Delete product price
      description: Deletes product price
      tags:
        - ProductPrices
      parameters:
        - name: productId
          required: true
          in: path
          description: delivery id id
          schema:
            type: string
            format: uuid
        - name: productPriceId
          required: true
          in: path
          description: delivery id id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: No content to indicate successful delete
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /deliveryQualities:
    get:
      operationId: listDeliveryQualities
      summary: Lists delivery qualities
      description: Lists delivery qualities
      tags:
        - DeliveryQualities
      parameters:
        - name: itemGroupCategory
          in: query
          description: filter by item group category
          schema:
            $ref: "#/components/schemas/ItemGroupCategory"
        - name: productId
          in: query
          description: filter by product Id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of delivery qualities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeliveryQuality"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createDeliveryQuality
      summary: Create delivery quality
      description: Creates delivery quality
      tags:
        - DeliveryQualities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryQuality"
        description: Payload
        required: true
      responses:
        "200":
          description: Created delivery quality
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryQuality"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /deliveryQualities/{deliveryQualityId}:
    get:
      operationId: findDeliveryQuality
      summary: Find delivery quality
      description: Finds delivery quality
      tags:
        - DeliveryQualities
      parameters:
        - name: deliveryQualityId
          required: true
          in: path
          description: delivery quality id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A created delivery quality
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryQuality"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateDeliveryQuality
      summary: Update delivery quality
      description: Updates delivery quality
      tags:
        - DeliveryQualities
      parameters:
        - name: deliveryQualityId
          required: true
          in: path
          description: delivery quality id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryQuality"
        description: Payload
        required: true
      responses:
        "200":
          description: Updated delivery quality
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryQuality"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /deliveries:
    post:
      operationId: createDelivery
      summary: Create delivery
      description: Creates delivery
      tags:
        - Deliveries
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Delivery"
        description: Payload
        required: true
      responses:
        "200":
          description: Created delivery
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Delivery"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    get:
      operationId: listDeliveries
      summary: Lists deliveries
      description: Lists deliveries
      tags:
        - Deliveries
      parameters:
        - name: userId
          in: query
          description: filter by user id
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          description: filter by status
          schema:
            $ref: "#/components/schemas/DeliveryStatus"
        - name: itemGroupCategory
          in: query
          description: filter by item group id
          schema:
            $ref: "#/components/schemas/ItemGroupCategory"
        - name: itemGroupId
          in: query
          description: filter by item group id
          schema:
            type: string
            format: uuid
        - name: productId
          in: query
          description: filter by item group id
          schema:
            type: string
            format: uuid
        - name: deliveryPlaceId
          in: query
          description: filter by delivery place id
          schema:
            type: string
            format: uuid
        - name: timeBefore
          in: query
          description: filter by time before specified time
          schema:
            type: string
            format: date-time
        - name: timeAfter
          in: query
          description: filter by time after specified time
          schema:
            type: string
            format: date-time
        - name: firstResult
          in: query
          description: Offset of first result. Defaults to 0
          schema:
            type: integer
            format: int64
        - name: maxResults
          in: query
          description: Max results. Defaults to 5
          schema:
            type: integer
            format: int64

      responses:
        "200":
          description: List of deliveries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Delivery"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /deliveries/{deliveryId}:
    get:
      operationId: findDelivery
      summary: Find delivery
      description: Finds delivery by id
      tags:
        - Deliveries
      parameters:
        - name: deliveryId
          required: true
          in: path
          description: delivery id id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A created delivery
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Delivery"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateDelivery
      summary: Update delivery
      description: Updates delivery
      tags:
        - Deliveries
      parameters:
        - name: deliveryId
          required: true
          in: path
          description: delivery id id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Delivery"
        description: Payload
        required: true
      responses:
        "200":
          description: Updated delivery
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Delivery"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteDelivery
      summary: Delete delivery
      description: Deletes delivery
      tags:
        - Deliveries
      parameters:
        - name: deliveryId
          required: true
          in: path
          description: delivery id id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: No content to indicate successful delete
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /deliveries/{deliveryId}/notes:
    post:
      operationId: createDeliveryNote
      summary: Create delivery note
      description: Creates delivery note
      tags:
        - Deliveries
      parameters:
        - name: deliveryId
          required: true
          in: path
          description: delivery id id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryNote"
        description: Payload
        required: true
      responses:
        "200":
          description: Created delivery note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryNote"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    get:
      operationId: listDeliveryNotes
      summary: Lists deliveries notes
      description: Lists deliveries notes
      tags:
        - Deliveries
      parameters:
        - name: deliveryId
          required: true
          in: path
          description: delivery id id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of delivery notes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeliveryNote"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /deliveries/{deliveryId}/notes/{deliveryNoteId}:
    get:
      operationId: findDeliveryNote
      summary: Find delivery note
      description: Finds delivery note by id
      tags:
        - Deliveries
      parameters:
        - name: deliveryId
          required: true
          in: path
          description: delivery id id
          schema:
            type: string
            format: uuid
        - name: deliveryNoteId
          required: true
          in: path
          description: delivery id id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of delivery notes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryNote"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateDeliveryNote
      summary: Update delivery note
      description: Updates delivery note
      tags:
        - Deliveries
      parameters:
        - name: deliveryId
          required: true
          in: path
          description: delivery id id
          schema:
            type: string
            format: uuid
        - name: deliveryNoteId
          required: true
          in: path
          description: delivery id id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryNote"
        description: Payload
        required: true
      responses:
        "200":
          description: Updated delivery note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryNote"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteDeliveryNote
      summary: Delete delivery note
      description: Deletes delivery note
      tags:
        - Deliveries
      parameters:
        - name: deliveryId
          required: true
          in: path
          description: delivery id id
          schema:
            type: string
            format: uuid
        - name: deliveryNoteId
          required: true
          in: path
          description: delivery id id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: No content to indicate successful delete
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /deliveryLoans:
    post:
      operationId: createDeliveryLoan
      summary: Create delivery loan
      description: Creates delivery loan
      tags:
        - DeliveryLoans
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryLoan"
              type: object
              required:
                - contactId
                - comment
                - loans
              properties:
                contactId:
                  type: string
                  format: uuid
                comment:
                  type: string
                loans:
                  type: array
                  items:  
                    $ref: "#/components/schemas/DeliveryLoan"
        description: Payload
        required: true
      responses:
        "200":
          description: Created delivery loans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeliveryLoan"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /reports/{type}:
    get:
      operationId: getReport
      summary: Returns report
      description: Returns report by type
      tags:
        - Reports
      parameters:
        - name: type
          required: true
          in: path
          description: Report type
          schema:
            type: string
        - name: format
          required: true
          in: query
          description: document format (HTML or PDF)
          schema:
            type: string
        - name: startDate
          in: query
          description: deliveries from
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: deliveries to
          schema:
            type: string
            format: date-time
        - name: productIds
          in: query
          description: filter by product Ids
          schema:
            type: array
            items:
              type: string
              format: uuid
      responses:
        "200":
          description: Document data
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            text/html:
              schema:
                type: string
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /weekDeliveryPredictions:
    post:
      operationId: createWeekDeliveryPrediction
      summary: Create week delivery prediction
      description: Creates week delivery prediction
      tags:
        - WeekDeliveryPredictions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WeekDeliveryPrediction"
        description: Payload
        required: true
      responses:
        "200":
          description: Created weekDeliveryPrediction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeekDeliveryPrediction"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    get:
      operationId: listWeekDeliveryPredictions
      summary: Lists weekDeliveryPredictions
      description: Lists weekDeliveryPredictions
      tags:
        - WeekDeliveryPredictions
      parameters:
        - name: itemGroupId
          in: query
          description: filter by item group id
          schema:
            type: string
            format: uuid
        - name: itemGroupCategory
          in: query
          description: filter by item group id
          schema:
            $ref: "#/components/schemas/ItemGroupCategory"
        - name: userId
          in: query
          description: filter by user id
          schema:
            type: string
            format: uuid
        - name: weekNumber
          in: query
          description: filter by week number
          schema:
            type: integer
            format: int32
        - name: year
          in: query
          description: filter by year
          schema:
            type: integer
            format: int32
        - name: firstResult
          in: query
          description: Offset of first result. Defaults to 0
          schema:
            type: integer
            format: int64
        - name: maxResults
          in: query
          description: Max results. Defaults to 5
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: List of weekDeliveryPredictions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WeekDeliveryPrediction"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /weekDeliveryPredictions/{weekDeliveryPredictionId}:
    get:
      operationId: findWeekDeliveryPrediction
      summary: Find weekDeliveryPrediction
      description: Finds weekDeliveryPrediction by id
      tags:
        - WeekDeliveryPredictions
      parameters:
        - name: weekDeliveryPredictionId
          required: true
          in: path
          description: weekDeliveryPrediction id id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A created weekDeliveryPrediction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeekDeliveryPrediction"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateWeekDeliveryPrediction
      summary: Update weekDeliveryPrediction
      description: Updates weekDeliveryPrediction
      tags:
        - WeekDeliveryPredictions
      parameters:
        - name: weekDeliveryPredictionId
          required: true
          in: path
          description: weekDeliveryPrediction id id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WeekDeliveryPrediction"
        description: Payload
        required: true
      responses:
        "200":
          description: Updated weekDeliveryPrediction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeekDeliveryPrediction"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteWeekDeliveryPrediction
      summary: Delete weekDeliveryPrediction
      description: Deletes weekDeliveryPrediction
      tags:
        - WeekDeliveryPredictions
      parameters:
        - name: weekDeliveryPredictionId
          required: true
          in: path
          description: weekDeliveryPrediction id id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: No content to indicate successful delete
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /sharedFiles:
    get:
      operationId: listSharedFiles
      summary: List shared files from S3
      description: Lists shared files from Amazon S3
      tags:
        - SharedFiles
      parameters:
        - in: query
          name: pathPrefix
          description: Path prefix
          schema:
            type: string
      responses:
        "200":
          description: List of SharedFiles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SharedFile"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteSharedFile
      summary: Delete shared file from S3
      description: Deletes shared file from Amazon S3
      tags:
        - SharedFiles
      parameters:
        - in: query
          name: pathPrefix
          description: File path prefix
          schema:
            type: string
        - in: query
          name: fileName
          description: File name
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successfully deleted shared file
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /sharedFiles/upload/file:
    post:
      operationId: uploadSharedFile
      summary: Upload shared file to S3
      description: Uploads shared file to Amazon S3
      tags:
        - SharedFiles
      parameters:
        - in: query
          name: pathPrefix
          description: File path prefix
          schema:
            type: string
        - in: query
          name: fileName
          description: File name
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: Uploaded file as sharedFile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SharedFile"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"   
  /sharedFiles/upload/folder:
    post:
      operationId: uploadSharedFolder
      summary: Upload shared folder to S3
      description: Uploads shared folder to Amazon S3
      tags:
        - SharedFiles
      parameters:
        - in: query
          name: pathPrefix
          description: Folder path prefix
          schema:
            type: string
        - in: query
          name: folderName
          description: Folder name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Uploaded folder as sharedFile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SharedFile"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /sharedFiles/download:
    get:
      operationId: getSharedFile
      summary: Get shared file from S3
      description: Fetches shared file from Amazon S3
      tags:
        - SharedFiles
      parameters:
        - in: query
          name: pathPrefix
          description: Path prefix
          schema:
            type: string
        - in: query
          name: fileName
          description: File name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: File
          content:
            application/*:
              schema:
                type: string
                format: binary
            image/*:
              schema:
                type: string
                format: binary
            text/*:
              schema:
                type: string
                format: binary
            video/*:
              schema:
                type: string
                format: binary
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /publicFiles:
    post:
      operationId: createPublicFile
      summary: Create public file
      description: Creates public file
      tags:
        - PublicFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublicFile"
        description: Payload
        required: true
      responses:
        "200":
          description: Created publicFile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicFile"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    get:
      operationId: listPublicFiles
      summary: Lists public files
      description: Lists public files
      tags:
        - PublicFiles
      parameters:
        - name: firstResult
          in: query
          description: Offset of first result. Defaults to 0
          schema:
            type: integer
            format: int64
        - name: maxResults
          in: query
          description: Max results. Defaults to 5
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: List of publicFiles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PublicFile"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /publicFiles/{publicFileId}:
    get:
      operationId: findPublicFile
      summary: Find public file
      description: Finds public file by id
      tags:
        - PublicFiles
      parameters:
        - name: publicFileId
          required: true
          in: path
          description: publicFile id id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A created publicFile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicFile"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updatePublicFile
      summary: Update public file
      description: Updates public file
      tags:
        - PublicFiles
      parameters:
        - name: publicFileId
          required: true
          in: path
          description: publicFile id id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublicFile"
        description: Payload
        required: true
      responses:
        "200":
          description: Updated publicFile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicFile"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deletePublicFile
      summary: Delete public file
      description: Deletes public file
      tags:
        - PublicFiles
      parameters:
        - name: publicFileId
          required: true
          in: path
          description: publicFile id id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: No content to indicate successful delete
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /unreads:
    get:
      operationId: listUnreads
      summary: Lists unreads
      description: Lists unreads
      tags:
        - Unreads
      parameters:
        - name: pathPrefix
          in: query
          description: filter unreads by path prefix
          schema:
            type: string
        - name: userId
          in: query
          description: filter unreads by userId
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of unreads
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Unread"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /unreads/{unreadId}:
    delete:
      operationId: deleteUnread
      summary: Delete unread
      description: Deletes unread
      tags:
        - Unreads
      parameters:
        - name: unreadId
          required: true
          in: path
          description: unread id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: No content to indicate successful delete
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /dataSheets:
    post:
      operationId: createDataSheet
      summary: Create data sheet
      description: Creates data sheet
      tags:
        - DataSheets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSheet"
        description: Payload
        required: true
      responses:
        "200":
          description: Created dataSheet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSheet"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    get:
      operationId: listDataSheets
      summary: Lists data sheets
      description: Lists data sheets
      tags:
        - DataSheets
      parameters:
        - name: name
          in: query
          description: Filter by name
          schema:
            type: string
      responses:
        "200":
          description: List of data sheets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DataSheet"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /dataSheets/{dataSheetId}:
    get:
      operationId: findDataSheet
      summary: Find data sheet
      description: Finds data sheet by id
      tags:
        - DataSheets
      parameters:
        - name: dataSheetId
          required: true
          in: path
          description: dataSheet id id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A created dataSheet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSheet"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateDataSheet
      summary: Update data sheet
      description: Updates data sheet
      tags:
        - DataSheets
      parameters:
        - name: dataSheetId
          required: true
          in: path
          description: dataSheet id id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSheet"
        description: Payload
        required: true
      responses:
        "200":
          description: Updated dataSheet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSheet"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteDataSheet
      summary: Delete data sheet
      description: Deletes data sheet
      tags:
        - DataSheets
      parameters:
        - name: dataSheetId
          required: true
          in: path
          description: dataSheet id id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: No content to indicate successful delete
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /openingHours/{deliveryPlaceId}/periods:
    get:
      operationId: listOpeningHourPeriods
      summary: List opening hour periods
      description: Lists opening hour periods
      tags:
        - OpeningHours
      parameters:
        - name: deliveryPlaceId
          required: true
          in: path
          description: delivery place id
          schema:
            type: string
            format: uuid
        - name: rangeStart
          required: false
          in: query
          description: list date range start
          schema:
            type: string
            format: date-time
        - name: rangeEnd
          required: false
          in: query
          description: list date range end
          schema:
            type: string
            format: date-time
        - name: firstResult
          in: query
          description: Offset of first result. Defaults to 0
          schema:
            type: integer
            format: int64
        - name: maxResults
          in: query
          description: Max results. Defaults to unlimited
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: List of opening hour periods
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OpeningHourPeriod"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createOpeningHourPeriod
      summary: Create opening hour period
      description: Creates opening hour period
      tags:
        - OpeningHours
      parameters:
        - name: deliveryPlaceId
          required: true
          in: path
          description: delivery place id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpeningHourPeriod"
        description: Payload
        required: true
      responses:
        "200":
          description: Created opening hour period
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpeningHourPeriod"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /openingHours/{deliveryPlaceId}/periods/{periodId}:
    get:
      operationId: findOpeningHourPeriod
      summary: Find opening hour period
      description: Finds opening hour period
      tags:
        - OpeningHours
      parameters:
        - name: deliveryPlaceId
          required: true
          in: path
          description: delivery place id
          schema:
            type: string
            format: uuid
        - name: periodId
          required: true
          in: path
          description: period id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Opening hour period
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpeningHourPeriod"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    put:
      operationId: updateOpeningHourPeriod
      summary: Update opening hour period
      description: Updates opening hour period
      tags:
        - OpeningHours
      parameters:
        - name: deliveryPlaceId
          required: true
          in: path
          description: delivery place id
          schema:
            type: string
            format: uuid
        - name: periodId
          required: true
          in: path
          description: period id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpeningHourPeriod"
        description: Payload
        required: true
      responses:
        "200":
          description: Updated opening hour period
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpeningHourPeriod"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteOpeningHourPeriod
      summary: Delete opening hour period
      description: Deletes opening hour period
      tags:
        - OpeningHours
      parameters:
        - name: deliveryPlaceId
          required: true
          in: path
          description: delivery place id
          schema:
            type: string
            format: uuid
        - name: periodId
          required: true
          in: path
          description: period id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: No content to indicate successful delete
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /openingHours/{deliveryPlaceId}/exceptions:
    get:
      operationId: listOpeningHourExceptions
      summary: List opening hour exceptions
      description: Lists opening hour exceptions
      tags:
        - OpeningHours
      parameters:
        - name: deliveryPlaceId
          required: true
          in: path
          description: delivery place id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of opening hour exceptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OpeningHourException"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    post:
      operationId: createOpeningHourException
      summary: Create opening hour exception
      description: Creates opening hour exception
      tags:
        - OpeningHours
      parameters:
        - name: deliveryPlaceId
          required: true
          in: path
          description: delivery place id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpeningHourException"
        description: Payload
        required: true
      responses:
        "200":
          description: Created opening hour exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpeningHourException"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /openingHours/{deliveryPlaceId}/exceptions/{exceptionId}:
    put:
      operationId: updateOpeningHourException
      summary: Update opening hour exception
      description: Updates opening hour exception
      tags:
        - OpeningHours
      parameters:
        - name: deliveryPlaceId
          required: true
          in: path
          description: delivery place id
          schema:
            type: string
            format: uuid
        - name: exceptionId
          required: true
          in: path
          description: exception id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpeningHourException"
        description: Payload
        required: true
      responses:
        "200":
          description: Updated opening hour exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpeningHourException"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      operationId: deleteOpeningHourException
      summary: Delete opening hour exception
      description: Deletes opening hour exception
      tags:
        - OpeningHours
      parameters:
        - name: deliveryPlaceId
          required: true
          in: path
          description: delivery place id
          schema:
            type: string
            format: uuid
        - name: exceptionId
          required: true
          in: path
          description: exception id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: No content to indicate successful delete
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
components:
  requestBodies:
    ContractDocumentTemplate:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ContractDocumentTemplate"
      description: Payload
      required: true
    ItemGroupPrice:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ItemGroupPrice"
      description: Payload
      required: true
    Contract:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Contract"
      description: Payload
      required: true
  securitySchemes:
    bearer:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    Contact:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayName:
          type: string
          readOnly: true
        avatarUrl:
          type: string
          format: url
          readOnly: true
        sapId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        companyName:
          type: string
        phoneNumbers:
          type: array
          items:
            type: string
        email:
          type: string
          format: email
        addresses:
          type: array
          items:
            $ref: "#/components/schemas/Address"
        BIC:
          type: string
        IBAN:
          type: string
        taxCode:
          type: string
        vatLiable:
          type: string
          enum:
            - YES
            - NO
            - EU
        audit:
          type: string
    BasicContact:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayName:
          type: string
          readOnly: true
        avatarUrl:
          type: string
          format: url
          readOnly: true
    Credentials:
      type: object
      properties:
        password:
          type: string
    Contract:
      type: object
      required:
        - year
        - status
        - deliverAll
        - proposedDeliverAll
        - deliveryPlaceId
        - itemGroupId
      properties:
        id:
          type: string
          format: uuid
        sapId:
          type: string
        contactId:
          type: string
          format: uuid
        deliveryPlaceId:
          type: string
          format: uuid
        proposedDeliveryPlaceId:
          type: string
          format: uuid
        deliveryPlaceComment:
          type: string
        itemGroupId:
          type: string
          format: uuid
        year:
          type: integer
          format: int32
        contractQuantity:
          type: number
          format: double
        deliveredQuantity:
          type: number
          format: double
        proposedQuantity:
          type: number
          format: double
        quantityComment:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        signDate:
          type: string
          format: date
        termDate:
          type: string
          format: date
        rejectComment:
          type: string
        areaDetails:
          type: array
          items:
            $ref: "#/components/schemas/AreaDetail"
        deliverAll:
          type: boolean
        proposedDeliverAll:
          type: boolean
        status:
          $ref: "#/components/schemas/ContractStatus"
        remarks:
          type: string

    ContractQuantities:
      type: object
      properties:
        contractQuantity:
          type: number
          format: double
          readOnly: true
        deliveredQuantity:
          type: number
          format: double
          readOnly: true

    ContractPreviewData:
      type: object
      required:
        - contract
        - importedValues
        - errors
      properties:
        contract:
          $ref: "#/components/schemas/Contract"
        importedContract:
          $ref: "#/components/schemas/ImportedContract"
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ImportedContractError"
    ImportedContract:
      type: object
      required:
        - contactName
        - deliveryPlaceName
        - deliveryPlaceComment
        - itemGroupName
        - contractQuantity
        - quantityComment
        - deliverAll
        - remarks
      properties:
        contactName:
          type: string
        deliveryPlaceName:
          type: string
        deliveryPlaceComment:
          type: string
        itemGroupName:
          type: string
        contractQuantity:
          type: string
        quantityComment:
          type: string
        deliverAll:
          type: string
        remarks:
          type: string
    ContractStatus:
      type: string
      enum:
        - APPROVED
        - ON_HOLD
        - DRAFT
        - TERMINATED
        - REJECTED
    ImportedContractError:
      type: object
      required:
        - key
        - message
      properties:
        key:
          type: string
        message:
          type: string
    ItemGroupPrice:
      type: object
      required:
        - group
        - unit
        - price
        - year
      properties:
        id:
          type: string
          format: uuid
        group:
          type: string
        year:
          type: integer
          format: int32
        unit:
          type: string
        price:
          type: string
    ItemGroupDocumentTemplate:
      type: object
      required:
        - contents
      properties:
        id:
          type: string
          format: uuid
        itemGroupId:
          type: string
          format: uuid
        type:
          type: string
        contents:
          type: string
        header:
          type: string
        footer:
          type: string
    ContractDocumentTemplate:
      type: object
      required:
        - contents
        - type
      properties:
        id:
          type: string
          format: uuid
        contractId:
          type: string
          format: uuid
        type:
          type: string
        contents:
          type: string
        header:
          type: string
        footer:
          type: string
    ContractDocumentSignRequest:
      type: object
      properties:
        redirectUrl:
          type: string
    SignAuthenticationService:
      type: object
      properties:
        identifier:
          type: string
        name:
          type: string
        image:
          type: string
          format: url
    ItemGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        displayName:
          type: string
        category:
          $ref: "#/components/schemas/ItemGroupCategory"
        minimumProfitEstimation:
          type: number
          format: double
        prerequisiteContractItemGroupId:
          description: Require contract in specified item group before siging a contract
          type: string
          format: uuid
    ItemGroupCategory:
      type: string
      enum:
        - FRESH
        - FROZEN
    DeliveryPlace:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    Product:
      type: object
      required:
        - itemGroupId
        - name
        - units
        - unitSize
        - unitName
        - sapItemCode
        - active
      properties:
        id:
          type: string
          format: uuid
        itemGroupId:
          type: string
          format: uuid
        name:
          type: string
        units:
          type: integer
          format: int32
        unitSize:
          type: integer
          format: int32
        unitName:
          type: string
        sapItemCode:
          type: string
        active:
          type: boolean
    Delivery:
      type: object
      required:
        - productId
        - userId
        - time
        - status
        - amount
        - deliveryPlaceId
      properties:
        id:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        time:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/DeliveryStatus"
        amount:
          type: number
          format: double
        price:
          description: "Base price without quality bonus"
          type: string
        qualityId:
          type: string
          format: uuid
        deliveryPlaceId:
          type: string
          format: uuid
        warehouseCode:
          type: string
        loans:
          type: array
          description: Array of loans. Property is write only
          items:
            $ref: "#/components/schemas/DeliveryLoan"
    DeliveryLoanItem:
      type: string
      enum:
        - GRAY_BOX
        - RED_BOX
    DeliveryLoan:
      required:
        - item
        - loaned
        - returned
      properties:
        item:
          $ref: "#/components/schemas/DeliveryLoanItem"
        loaned:
          type: integer
          format: int32
        returned:
          type: integer
          format: int32
    WeekDeliveryPrediction:
      required:
        - itemGroupId
        - userId
        - amount
        - weekNumber
        - year
        - days
      properties:
        id:
          type: string
          format: uuid
        itemGroupId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        amount:
          type: integer
          format: int32
        weekNumber:
          type: integer
          format: int32
        year:
          type: integer
          format: int32
        days:
          type: object
          required:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
          properties:
            monday:
              type: boolean
            tuesday:
              type: boolean
            wednesday:
              type: boolean
            thursday:
              type: boolean
            friday:
              type: boolean
            saturday:
              type: boolean
            sunday:
              type: boolean
    DeliveryStatus:
      type: string
      enum:
        - PROPOSAL
        - PLANNED
        - DELIVERY
        - DONE
        - REJECTED
        - NOT_ACCEPTED
        - DELIVERYLOAN
    DeliveryQuality:
      type: object
      required:
        - itemGroupCategory
        - name
        - priceBonus
        - color
        - displayName
        - deliveryQualityProductIds
      properties:
        id:
          type: string
          format: uuid
        itemGroupCategory:
          $ref: "#/components/schemas/ItemGroupCategory"
        name:
          type: string
        priceBonus:
          type: number
          format: double
        color:
          type: string
        displayName:
          type: string
        deliveryQualityProductIds:
          type: array
          items:
            type: string
            format: uuid
    DeliveryNote:
      required:
        - deliveryId
      properties:
        id:
          type: string
          format: uuid
        text:
          type: string
        image:
          type: string
          format: url
    Address:
      type: object
      properties:
        streetAddress:
          type: string
        postalCode:
          type: string
        city:
          type: string
    OpeningHourPeriod:
      type: object
      required:
        - beginDate
        - endDate
        - weekdays
      properties:
        id:
          type: string
          format: uuid
        beginDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        weekdays:
          type: array
          items:
            $ref: "#/components/schemas/OpeningHourWeekday"
          minItems: 7
          maxItems: 7
    OpeningHourWeekday:
      type: object
      required:
        - dayType
        - hours
      properties:
        id:
          type: string
          format: uuid
        dayType:
          $ref: "#/components/schemas/WeekdayType"
        hours:
          type: array
          items:
            $ref: "#/components/schemas/OpeningHourInterval"
    WeekdayType:
      type: string
      enum:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
    OpeningHourException:
      type: object
      required:
        - exceptionDate
        - hours
      properties:
        id:
          type: string
          format: uuid
        exceptionDate:
          type: string
          format: date
        hours:
          type: array
          items:
            $ref: "#/components/schemas/OpeningHourInterval"
    OpeningHourInterval:
      type: object
      required:
        - opens
        - closes
      properties:
        id:
          type: string
          format: uuid
        opens:
          type: string
          format: date-time
        closes:
          type: string
          format: date-time
    Operation:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/OperationType"
        operationReportId:
          type: string
          format: uuid
    OperationType:
      type: string
      enum:
        - SAP_CONTACT_SYNC
        - SAP_DELIVERY_PLACE_SYNC
        - SAP_ITEM_GROUP_SYNC
        - SAP_CONTRACT_SYNC
        - SAP_CONTRACT_SAPID_SYNC
        - ITEM_GROUP_DEFAULT_DOCUMENT_TEMPLATES
        - UPDATE_CURRENT_YEAR_APPROVED_CONTRACTS_TO_SAP
    OperationReport:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          $ref: "#/components/schemas/OperationType"
        started:
          type: string
          format: date-time
        pendingCount:
          type: integer
          format: int32
        failedCount:
          type: integer
          format: int32
        successCount:
          type: integer
          format: int32
    OperationReportItem:
      type: object
      properties:
        status:
          type: string
          enum:
            - PENDING
            - FAILURE
            - SUCCESS
        message:
          type: string
    AreaDetail:
      type: object
      properties:
        name:
          type: string
        size:
          type: number
          format: double
        species:
          type: string
        profitEstimation:
          type: number
          format: double
    ChatGroup:
      type: object
      required:
        - title
        - type
        - answerType
      properties:
        id:
          type: integer
          format: int64
        type:
          $ref: "#/components/schemas/ChatGroupType"
        title:
          type: string
        imageUrl:
          type: string
          format: url
    ChatThread:
      type: object
      required:
        - title
        - answerType
        - groupId
      properties:
        id:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        imageUrl:
          type: string
          format: url
        answerType:
          type: string
          enum:
            - TEXT
            - POLL
        permissionType:
          type: string
          enum:
            - ACCESS
            - MANAGE
        pollAllowOther:
          type: boolean
        pollPredefinedTexts:
          type: array
          items:
            type: string
        expiresAt:
          type: string
          format: date-time
    UserGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    ChatGroupPermissionScope:
      type: string
      enum:
        - ACCESS
        - MANAGE
        - TRAVERSE
    ChatThreadPermissionScope:
      type: string
      enum:
        - ACCESS
    ChatGroupGroupPermission:
      type: object
      required:
        - chatGroupId
        - userGroupId
      properties:
        id:
          type: string
          readOnly: true
        chatGroupId:
          type: integer
          format: int64
        userGroupId:
          type: string
          format: uuid
        scope:
          $ref: "#/components/schemas/ChatGroupPermissionScope"
    ChatThreadUserPermission:
      type: object
      required:
        - chatThreadId
        - userId
      properties:
        id:
          type: string
          readOnly: true
        chatThreadId:
          type: integer
          format: int64
        userId:
          type: string
          format: uuid
        scope:
          $ref: "#/components/schemas/ChatThreadPermissionScope"
    ChatThreadGroupPermission:
      type: object
      required:
        - chatThreadId
        - userGroupId
      properties:
        id:
          type: string
          readOnly: true
        chatThreadId:
          type: integer
          format: int64
        userGroupId:
          type: string
          format: uuid
        scope:
          $ref: "#/components/schemas/ChatThreadPermissionScope"
    ChatMessage:
      type: object
      required:
        - threadId
      properties:
        id:
          type: integer
          format: int64
        threadId:
          type: integer
          format: int64
        userId:
          type: string
          format: uuid
        image:
          type: string
          format: url
        contents:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    ChatGroupType:
      type: string
      enum:
        - CHAT
        - QUESTION
    NewsArticle:
      type: object
      required:
        - title
        - contents
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        contents:
          type: string
        imageUrl:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    SharedFile:
      type: object
      required:
        - name
        - fileType
      properties:
        name:
          type: string
        pathPrefix:
          type: string
        fileType:
          $ref: "#/components/schemas/FileType"
    FileType:
      type: string
      enum:
        - IMAGE
        - PDF
        - OTHER
        - FOLDER
    PublicFile:
      type: object
      required:
        - url
      properties:
        id:
          type: string
          format: uuid
        url:
          type: string
          format: url
    ProductPrice:
      type: object
      required:
        - productId
        - unit
        - price
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        productId:
          type: string
          format: uuid
        unit:
          type: string
        price:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    Unread:
      type: object
      required:
        - type
      properties:
        id:
          type: string
          readOnly: true
        path:
          type: string
        userId:
          type: string
          format: uuid
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
    DataSheet:
      type: object
      required:
        - name
        - data
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        data:
          type: array
          items:
            type: array
            items:
              type: string
    InternalServerError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Forbidden:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    BadRequest:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    NotImplemented:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    NotFound:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
